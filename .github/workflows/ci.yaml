# Copyright 2020 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Continuous integration tests
run-name: >-
  Test code and notebooks in
  ${{github.event_name == 'pull_request' && format('PR #{0}', github.event.pull_request.number)
    || format('push to {0}', github.ref_name) }}
  by @${{github.actor}}

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  merge_group:
    types:
      - checks_requested

  workflow_dispatch:

# Declare default workflow permissions as read only.
permissions: read-all

concurrency:
  # Cancel any previously-started but still active runs on the same branch.
  cancel-in-progress: true
  group: ${{github.workflow}}-${{github.event.pull_request.number||github.ref}}

env:
  # Python version to use.
  python_version: 3.11

  # Files containing lists of dependencies installed using pip. This is used as
  # a parameter to setup-python to check whether its pip cache needs updating.
  python_dep_files: |-
    requirements.txt
    recirq/**/extra-requirements.txt
    dev_tools/requirements/deps/*.txt
    dev_tools/check_notebooks.py
    dev_tools/write-ci-requirements.py

jobs:
  pytest:
    name: Run Python tests
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    strategy:
      matrix:
        cirq-version:
          - 'current'
          - 'previous'
          - 'next'
      fail-fast: false
    steps:
      - name: Check out a copy of the git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Python with caching of pip dependencies
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: ${{env.python_version}}
          cache: pip
          cache-dependency-path: ${{env.python_dep_files}}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python dev_tools/write-ci-requirements.py \
            --relative-cirq-version=${{ matrix.cirq-version }} --all-extras
          pip install -r ci-requirements.txt
          pip install --no-deps -e .

      - name: Test with pytest
        run: |
          # OMP_NUM_THREADS: PySCF's poor OpenMP performance slows down QCQMC tests.
          # RECIRQ_IMPORT_FAILSAFE: skip tests on unsupported Cirq configurations.
          export OMP_NUM_THREADS=1
          RECIRQ_IMPORT_FAILSAFE=y pytest -v --skipslow

  pylint:
    name: Run Python linters
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - name: Check out a copy of the git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Python with caching of pip dependencies
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: ${{env.python_version}}
          cache: pip
          cache-dependency-path: ${{env.python_dep_files}}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names.
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # `exit-zero` treats all errors as warnings. The GitHub editor is 127 chars wide.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  nbformat:
    name: Check notebook formatting
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - name: Check out a copy of the git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Python with caching of pip dependencies
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: ${{env.python_version}}
          cache: pip
          cache-dependency-path: ${{env.python_dep_files}}

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r dev_tools/requirements/deps/tensorflow-docs.txt

      - name: Check notebook formatting
        run: |
          dev_tools/nbformat

  workflow-validation:
    name: GitHub Actions workflow checks
      # This uses a Mac runner because actionlint isn't available via Linux apt.
    runs-on: macos-14
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the git repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Determine if workflow files were changed
        id: changes
        uses: tj-actions/changed-files@v44
        with:
          files: .github/workflows/**

      - if: steps.changes.outputs.any_changed != 'true'
        name: Stop early if there were no changes to workflow files
        run: exit 0

      - name: Verify that all workflow actions have pinned versions
        uses: zgosalvez/github-actions-ensure-sha-pinned-actions@fc87bb5b5a97953d987372e74478de634726b3e5

      # If we didn't fail the previous check, go on to more time-consuming ones.
      - name: Install actionlint
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install actionlint

      - name: Set up actionlint output problem matcher
        run: echo "::add-matcher::.github/problem-matchers/actionlint.json"

      - name: Verify that all GitHub Actions workflows are valid
        run: /opt/homebrew/bin/actionlint -color
